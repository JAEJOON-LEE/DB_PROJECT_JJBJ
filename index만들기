sql = "select P_ID from shoppingBag where P_id=" +o_id;
sql = "select pname from items where PID =" + o_id;
sql = "select id from customer where id = " +id ;
sql = "SELECT DISTINCT PID, PNAME, PRICE, ORDER_DATE FROM ORDER_DETAIL, ITEMS WHERE PID = C_ID AND C_ID = " +customer_id;
sql = "select distinct pname, price, pid from items";
sql2 = "select AQ from TOTAL where pid = " + rs.getInt(3) ;	
sql2 = "select AQ from TOTAL where pid = " + rs.getInt(3) ;	
sql = "SELECT P_ID, P_quant, P_price, order_date, C_ID FROM ORDER_DETAIL2";
sql = "SELECT PNAME from items where pid = "+ rs2.getInt(1);
sql = "select pname from ITEMS, shoppingBag where P_ID= " +d_id + " and P_ID = PID";
sql = "select P_ID from shoppingBag where P_ID = " + d_id;
String sql = "select * from customer where id = ?";
String sql = "select id from customer where id = " +id;
sql = "insert into customer (id, pw, hp, address, sex, age, job, order_count, retailer_num) values (?, ?, ?, ?, ?, ?, ?, ?, ?)";
String sql = "select * from customer where id = ?";
sql = "select id from customer where id = " +id ;
sql = "select * from temp14";
sql = "SELECT DISTINCT PID, PNAME, PRICE, P_quant FROM shoppingBag, ITEMS WHERE PID=P_ID AND C_ID = " +customer_id + " ORDER BY PID ASC";
sql = "SELECT DISTINCT PID, PNAME, PRICE, P_quant FROM shoppingBag, ITEMS WHERE PID=P_ID AND C_ID = " +customer_id;
 					
sql =  "select distinct t.pid, i.pname, i.price, t.aq from items i, total t where t.pid=i.pid and i.category_big = '" +big+"' and i.category_small = '" + small+"';";
	
sql = "select id, age from customer where id = " +id ;

sql = "CREATE VIEW TEMP7 AS SELECT ID FROM CUSTOMER WHERE AGE BETWEEN " + (tmp) + " AND " + (tmp + 9);

sql = "CREATE VIEW TEMP9 AS SELECT P_ID, COUNT(*) QUANT FROM ORDER_DETAIL, TEMP7 WHERE C_ID = ID GROUP BY P_ID ORDER BY QUANT  DESC LIMIT 1";

sql = "CREATE VIEW TEMP10 AS SELECT O.C_ID FROM ORDER_DETAIL O WHERE O.P_ID = (SELECT P_ID FROM TEMP9)";

sql = "CREATE VIEW TEMP12 AS SELECT P_ID, COUNT(*) QUANT FROM TEMP11 GROUP BY P_ID ORDER BY QUANT DESC LIMIT 5";

sql = "create view temp13 as select DISTINCT i.P_ID, t.AQ FROM temp12 i, TOTAL t where i.P_ID = t.PID";

sql = "select DISTINCT PID, PNAME, PRICE, AQ FROM temp13, ITEMS where PID=P_ID";
 	    		pstmt = con.prepareStatement(sql);


sql = "select distinct pid, pname, price from items where pname like '%" + part + "%'";
		sql2 = "select DISTINCT t.AQ from TOTAL t, items i where i.PID = t.pid and i.pname like '%" + part + "%'" ;
	}

sql = "select distinct pid, pname, price from items order by pid ASC";
		sql2 = "select distinct AQ from TOTAL" ;
	}


else
	{
		sql = "select distinct pid, pname, price from items where pid = " + part;
		sql2 = "select distinct AQ from TOTAL where pid = " + part;
	}


sql = "SELECT P_ID, P_quant, P_price, order_date FROM ORDER_DETAIL2 WHERE C_ID = " + id;

sql = "SELECT PNAME from items where pid = "+ rs2.getInt(1);

---------------------

#-INDEX
CREATE INDEX INDEXonITEMS ON ITEMS (PID, PNAME);
CREATE INDEX INDEXonTOTAL ON TOTAL (PID);
CREATE INDEX INDEXonCUSTOMER ON CUSTOMER(ID);
CREATE INDEX INDEXonSHOPPINGBAG ON SHOPPINGBAG (C_ID, P_ID);

CREATE INDEX INDEXonITEMS ON ITEMS (PID, PNAME);
ITEMS의 Attribute인 PID는 관리자가 재고를 추가를 하거나 고객이 상품을 검색, 장바구니에 담을 경우 
상품의 정보를 보여주기 위해 SELECT의 WHERE절에서 많이 사용되어 인덱스를 생성하였습니다.
PID와 PNAME은 거의 동일한 역할을 하고 있으나, 
PNAME보다는 PID로 쿼리를 사용하는 경우가 더 많아 PID를 우선시 하게 되었습니다.
 
	
CREATE INDEX INDEXonTOTAL ON TOTAL (PID);
TOTAL은 모든 상품들의 PID와 그에 해당하는 총량을 가지고 있으며, 관리자가 재고를 추가하거나 고객이 상품을 구매할 때 쿼리가 필요하게 됩니다. 또한, 상품의 정보를 보여줄 때 마다 PID에 해당하는 수량 정보까지 제공하는 등 쿼리에서 PID를 참조하는 경우가 많이 발생하여 인덱스를 생성하였습니다.

CREATE INDEX INDEXonCUSTOMER ON CUSTOMER(ID);
shoppingBag, order_detail2 등의 테이블은 특정 고객이 장바구니에 담은 상품과 구매한 상품들의 정보를 가지고 있습니다. 특정 고객이 로그인하여 장바구니와 과거주문내역을 확인하고자 할 때 마다 쿼리에서 고객의 ID가 필요하게 되어 인덱스로 생성하게 되었습니다.

	
CREATE INDEX INDEXonSHOPPINGBAG ON SHOPPINGBAG (C_ID, P_ID);
SHOPPINGBAG에는 모든 고객에 해당하는 장바구니 정보가 담겨있습니다. 특정 고객에게 자신의 장바구니 내용만 보여주어야 하기 때문에 C_ID를 우선적으로 하여 고객 ID에 해당하는 장바구니 목록을 가져온 뒤, P_ID를 통해 장바구니에 담은 상품의 정보 또한 확인하게 되므로 카디널리티가 높은 C_ID를 우선시하여 인덱스를 생성하였습니다.

 
	

